(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{215:function(e,s,a){"use strict";a.r(s);var t=a(1),r=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"地址生成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#地址生成","aria-hidden":"true"}},[e._v("#")]),e._v(" 地址生成")]),e._v(" "),a("ol",[a("li",[e._v("用输出size为20字节的Blake2b算法把Public key进行Hash后得到二进制形式的地址（BinaryAddress）；")]),e._v(" "),a("li",[e._v("用输出size为5字节Blake2b算法把BinaryAddress进行Hash后得到二进制地址的校验和（AddressChecksum）；")]),e._v(" "),a("li",[e._v('把AddressChecksum拼接到BinaryAddress之后，组成25字节的数组，把它转换成十六进制格式的字符串，再在这字符串前加上 "vite_"前缀；')])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('HumanReadableAddress = "vite_" + Hex(Blake2b160(PubKey) + Blake2b40(Blake2b160(PubKey)))\n')])])])])}],!1,null,null,null);r.options.__file="gen-address.md";s.default=r.exports}}]);